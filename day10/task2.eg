# Advent of Code (AoC) - day 10, task 2

import "prelude.eg"
import "os.ego" 
import "generator.eg"
using System 
using OS 
using List 
using String

def input = let L = read_line stdin in if eof stdin then {} else {L | input}

def parse_line = [ L ->
    if starts_with "noop" L then "noop"
    else if starts_with "addx" L then "addx" ((to_int . remove 0 5) L)
    else none ]

def repeat = 
    [ P {} -> P Gen::++ repeat P P
    | P {X|XX} -> {X| [_ -> repeat P (XX none)]} ]

def trace =
    [ X {"noop"|CC}     -> {X| [_ -> trace X (CC none) ] }
    | X {("addx" N)|CC} -> {X| [_ -> {X| [_ -> trace (X+N) (CC none)]}]} ]

def sprite =
    [ (C,X) -> if and ((X - 1) <= C) (C <= (X + 1)) then '#' else '.' ]

def main = 
    input |> map parse_line |> Gen::from_list |> [P -> repeat P {}] 
          |> trace 1 |> Gen::take 240 |> Gen::to_list
          |> chunks 40 |> map (map sprite . zip (from_to 0 39))
          |> foldl [_ T -> print (pack T) "\n"] none
